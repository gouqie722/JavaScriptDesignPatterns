  // 在GitHub上创建储存库  复制
  // git clone git@github.com:15016788356/JavaScriptDesignPatterns.git
  // git remote -v 查看远程分支
  // git add 'fileName'
  // git add . 添加所有文件
  // git commit describe 对当前提交进行描述
  // git state 查看当前提交的状态


  // 什么是设计模式, 原则
  // 设计模式是一套被反复使用，多数人知晓的，经过分类的，代码设计经验的总结
  // 推荐书籍 ==> js设计模式， js模式

  // 创建型-研究高效的创建对象
  // 单例模式
  // 抽象工厂模式
  // 建造者模式
  // 工厂模式
  // 原型模式

  // 结构型模式-> 设计对象的结构和关系
  // 适配器模式
  // 桥接模式
  // 装饰模式
  // 组合模式
  // 外观模式
  // 享元模式
  // 代理模式

  // 行为型模式-> 设计对象的行为
  // 模板方法模式, 命令模式, 迭代器模式, 观察者模式, 中介者模式, 备忘录模式, 解释器模式, 状态模式, 策略模式, 职责链模式
  // 访问者模式, 发布订阅模式


  // 设计模式的六大原则
  // 减少耦合, 增强复用性, 降低代码的开发维护扩展成本
  
  // 优先降低复杂度，尽量降低耦合度
  // 1. 利用单一职责原则, 开闭原则, 里氏代换原则降低耦合度
  // 2. 通过迪米特法则减少耦合
  // 3. 通过依赖倒置原则消除可以没有的耦合


  // 设计模式的六大原则之一
  // 单一职责原则
  // 一个方法只做一件事情



  // 设计模式的六大原则之六
  // 接口分离原则
  // 把大接口拆分成小接口，不能一个接口实现增删改查
  // 比如说我写作业， 要细分成，写数学，语文，英语等作业，同时降低了耦合度